Short Term Goals
	-Control image on screen
	-Make weedboy :)

Working on:

	X-get sdl image

	-learn arrays again

	-Texture
	
	-Animation

	-Asset Manager

	temp for WEEDBOY: Gotta make them good after temp work
		-Asset: just texture for now, made a temp texture, cant be bothered with
		figuring out arrays
		-Window: renderer working
		-Mouse events: just mouse location and click should do
		-objects: untouched i think

To do:

	random:
		-make comments
	in order:
		-Finish Assets
		-Window
		-Input
		-Layers
		-Objects


Application:
	Application should be able to have a 'current window' so its not needed to
	select application.getwindow("name").getwindowsize() for ex. instead something
	like application.getwindowsize() <- maybe overload this with
	application.getwindowsize("name") to specify window?

	Window Class:
		-Has: Name, size, name of renderer/the renderer
		-Each object is a new window
		-Layers
		-Gets passed window events to change size?

	EventHandler:
		-Keypresses and such
		-Takes care of different input modes so game logic functions can stay ignorant

	Storage system:
		-Data files, text files, or screenshots.
		-Saves

	-States & Statechanger
		-Runs all objectmanager scripts

ObjectManager:

	GameObject Class:
		-Things that are rendered and have data attached to them
		for example size, collisions, texture, position, layer, scripts, gamestate.

	MenuObject Class:
		-Selected with either mouse or keyboard, changes game states or settings.

	TextObject Class:
		-Different settings for how to display text.

AssetManager:
	-Creates, deletes and keeps track of all assets. (Texture, sound, text file,
	etc)
	-Needs an error texture incase
	-2d array where each row is for a different renderer. If a window tries to
	use a texture from another window it re creates the texture for that
	windows renderer


  Asset: A Baseclass perhaps? anyways i want different classes for each asset
	type i think
    -different types, paths, frametimes. Attributes of an asset


I MAKE LAYERS. THEY DO STUFF ON UPDATE, EVENT AND MAYBE ON RENDER?

APP.RUN RUNS THE ITS FUNCTIONS, GAME DEFINES THEM

LAYERS:
	Have an
